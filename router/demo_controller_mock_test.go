// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/charlires/go-app/router (interfaces: DemoController)

// Package router_test is a generated GoMock package.
package router_test

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockDemoController is a mock of DemoController interface
type MockDemoController struct {
	ctrl     *gomock.Controller
	recorder *MockDemoControllerMockRecorder
}

// MockDemoControllerMockRecorder is the mock recorder for MockDemoController
type MockDemoControllerMockRecorder struct {
	mock *MockDemoController
}

// NewMockDemoController creates a new mock instance
func NewMockDemoController(ctrl *gomock.Controller) *MockDemoController {
	mock := &MockDemoController{ctrl: ctrl}
	mock.recorder = &MockDemoControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDemoController) EXPECT() *MockDemoControllerMockRecorder {
	return m.recorder
}

// Demo mocks base method
func (m *MockDemoController) Demo(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Demo", arg0, arg1)
}

// Demo indicates an expected call of Demo
func (mr *MockDemoControllerMockRecorder) Demo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Demo", reflect.TypeOf((*MockDemoController)(nil).Demo), arg0, arg1)
}
